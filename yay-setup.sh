#!/bin/bash
# yay-setup.sh - install `yay` package manager inside Docker
# yaort Is no longer in official packages/maintained and yay is better so
# install yay instead

# Secure coding matters
set -euf -o pipefail

# Check if we are root
# Made redundant by the fact that this is meant to be run by Dockerfile
# but better safe than sorry...
if [[ $EUID -ne 0 ]]; then
    echo "[!] Script must be run as root"
    exit 1
fi

# Adds `nobody` to sudoers
enable_nobody_sudo()
{
    echo "[i] Adding user 'nobody' to sudoers"
    # Copy sudoers config for restoring later
    /bin/cp /etc/sudoers /etc/sudoers.orig

    # Add `nobody` to sudoers with no password
    # Admittedly, this is dangerous but this script is meant to be run by
    # a Dockerfile and be removed after usage so window of exploitation
    # is incredibly short
    if [[ $(echo "nobody ALL=(root) NOPASSWD: ALL" >> /etc/sudoers) ]]; then
    {
        echo "[+] User 'nobody' added to sudoers"
    }
    else {
        echo "[!] Failed to add User 'nobody' to sudoers"
        exit 1
    }
    fi
    
}

# Removes `nobody` from sudoers
disable_nobody_sudo()
{
    echo "[i] Removing User 'nobody' from sudoers"
    
    # Check that `/etc/sudoers.orig` exists.
    # This function is overengineered but better safe than sorry
    if [[ -f "/etc/sudoers.orig" ]]; then
        # Ensure `/etc/sudoers` exists
        if [[ -f "/etc/sudoers" ]]; then
            # Check MD5 to see if they match
            if [[ $(echo "/etc/sudoers  /etc/sudoers.org" |/usr/bin/md5sum -c --quiet - ) ]]; then
                # MD5s match which shouldn't be true. 
                # Replace anyway to keep filesystem clean.
                # Leaving this here for later in case extra logic is desired
                echo "[i] /etc/sudoers and /etc/sudoers.orig appear to be the same file"
                
                echo "[i] Removing modified '/etc/sudoers'"
                /bin/rm -f "/etc/sudoers"
                
                echo "[i] Replacing original '/etc/sudoers'"
                /bin/mv "/etc/sudoers.orig" "/etc/sudoers"
            fi
        else
            echo "[i] Removing modified '/etc/sudoers'"
            /bin/rm -f "/etc/sudoers"
            
            echo "[i] Replacing '/etc/sudoers' with original sudoers file"
            /bin/mv "/etc/sudoers.orig" "/etc/sudoers"
        fi
    else
        echo "[!] Could not find original sudoers file. Something has gone wrong"
        exit 1
    fi
    echo "[+] User 'nobody' removed from sudoers"
}

# Makes a temp dir and returns its path
make_temp_dir()
{
    echo "[i] Creating temporary directory"
    local tmpdir="$(/usr/sbin/mktemp -d /tmp/docker_yaytemp.XXXXXXXX)"
    chmod 777 "${tmpdir}"
    echo "[+] Temporary directory created at ${tmpdir}"
    echo "${tmpdir}"
}

install(){
    # Slightly modified from https://github.com/Jguer/yay
    echo "[i] Installing 'yay'"
    
    tmpdir=$(make_temp_dir)

    echo "[i] Cloning yay from AUR into '${tmpdir}'"
    sudo -u nobody bash -c "git clone https://aur.archlinux.org/yay.git ${tmpdir}"
    
    # Enable 'nobody' sudo privs temporarily
    enable_nobody_sudo

    echo "[i] Installing 'yay' with 'makepkg'"
    sudo -u nobody bash -c "cd ${tmpdir} && makepkg -si --noconfirm"
    
    echo "[i] Cleaning up with 'makepkg --clean'"
    sudo -u nobody bash -c "cd ${tmpdir} && makepkg --clean"
    
    # Disable 'nobody' sudo privs
    disable_nobody_sudo
    
    echo "[+] 'yay' successfully installed"
}
